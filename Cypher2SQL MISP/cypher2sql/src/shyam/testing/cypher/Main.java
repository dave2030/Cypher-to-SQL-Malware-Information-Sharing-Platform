package cypher;

import java.io.File;

import org.apache.commons.io.FileUtils;
import org.cytosm.common.gtop.RelationalGTopInterface;
import org.cytosm.cypher2sql.PassAvailables;

//Main class that calls and tests all the methods
public class Main extends connector {
	public static void main(String[] args) throws Exception {
		String cypher_query1 = "MATCH(a:events)  RETURN a.id,a.date,a.info,a.user_id";// This cypher query prints all
																						// events
		String cypher_query2 = "MATCH(a:attributes) WHERE a.id=4  RETURN a.id,a.event_id,a.category";// This cypher
																										// query prints
																										// where id=4,
																										// too large to
																										// print all
		// attributes
		connector db = new connector();
		db.connectToDB();
		db.printTables();
		db.printEvents(generateSQL(cypher_query1));// Uses cypher query 1
		db.printAttributes(generateSQL(cypher_query2));// users cypher query 2
		db.printThreadIndicator();
		db.extractUsers();
		db.close();
	}

	public static String generateSQL(String cypher) {
		String sqlQuery = "";
		try {
			String jsonInString = FileUtils.readFileToString(new File("query"));// Reads the cypher query file
			RelationalGTopInterface gtop = new RelationalGTopInterface(jsonInString);// References the gtop file for the
																						// cipher
			sqlQuery = PassAvailables.cypher2sql(gtop, cypher);// Retrieves SQL Query
			System.out.println("Got SQL : " + sqlQuery);
		} catch (Exception exc) {// Error
			System.out.println("Got exception : " + exc.getMessage());
			exc.printStackTrace();
		}
		return sqlQuery;

	}
}
